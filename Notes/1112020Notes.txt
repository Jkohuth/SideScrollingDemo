My lack of clearly defined class structure is becoming a problem as a struggle to trigger the proper events as I keep making different types of enemies. I want to have a base enemy class or controller that contains all the necessary interactions with the player of with other types of objects.

I learned a bit about timelines which is a SIGNIFICANT upgrade to trying to come up with some magic inside a Tick function. Need to finialize enemy designs and translate them all to C++ since I find blueprint dangerous and prone to failure. If I have to recompile blueprints and they get corrupted it really kills my mood.

My game is coming together to an extent, the wall enemy is too intrusive than original anticipated, perhaps I can make it thinner in order to avoid making it an extreme obstacle. 

Still haven't spent the time to learn the underpinnings of UE4, kinda doing a learning as I go type of situation which isn't bad but clearly has some serious flaws which is why I am on the third redesign of this game. But progress is progress and I am very satisfyed with what i have accomplished so far.

I still need to work on a game design document as illustrating my goals and aspirations for other people can keep me focused and know where to go next.

Editting the "Focus" mode is the next step I want the player movements to be extreme and exaggerated. However that needs to be stored in a USTRUCT and I still haven't properly learned those et

I keep attempting to use mr mannequin but honestly I should just use shapetraces in order to get the gameplay across of what I want to accomplish, there are no proper attack animations that fit with the feel and style I am attempting to convey. Those collisions need to ignore the player though


Cleaned the inflict damage portion inside SSDCharacter



14 - 1 - 2020

Character - Needs the "Focus mode" movements updated and edited along with the slow down of everything else slightly

	What is the flow for activating the focus?

	Player presses the focus button
		Fuction is triggered enabling focus
		Call function in movementcomponent to adjust movement values
		slow down time for every entity in the game that isn't the player
			Radius perhaps
			Would desire the screen to adjust in color and radius 
		call blueprint event - adjust the post processing shader

	Player releases the focus button
		Return everything to normal speed
		revert player controls to be less "slippery"
		revert screen post process shader

 Basic implementation achieved, however its to useful without any extreme side effects yet need to add more features in order to make it a double edge sword
 	Perhaps make a UI with health and if the bar runs out take a Health? 

	FUTURE:
		Limit shader to a specific radius of the screen that grows and shrinks with command
		Make player rebound if held to long Max duration
			Create UI tell to determine when that is
		Have screen revert slowly



Falling Platforms require timeline - Current implementation of the platforms leaves a lot to be desired as they only fall when overlapped with

	What is the flow of the falling platform

	Player steps on platform
		Perhaps it shakes a little and then begins to descend
			(Sounds like polish with the shaking)

		Player Overlaps box component
			Bool is set to true
		if(bool) start falling down 
			Continues to fall whether a player is currently on top of the platform or not
			Once it hits ground || enough time has passed
				Reset Location

			NOTE: Hitting ground shouldn't be a cause for resetting immediately, still have the duration be set in a timeline or timer no clipping through the ground


